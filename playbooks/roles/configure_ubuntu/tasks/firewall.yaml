---
- name: ðŸ”¥ Disable UFW
  community.general.ufw:
    state: disabled
  when: ansible_distribution_version == "20.04" or ansible_distribution_version == "22.04"

- name: ðŸ”¥ Install required system packages
  apt: name={{ item }} state=latest update_cache=yes
  loop: [
    'iptables',
    'iptables-persistent'
  ]

- name: ðŸ”¥ Set the policy for the INPUT chain to ACCEPT (IPv4)
  iptables:
    chain: INPUT
    ip_version: ipv4
    policy: ACCEPT
  tags:
    - config.firewall

- name: ðŸ”¥ Flush filter chains (IPv4)
  ansible.builtin.iptables:
    chain: "{{ item }}"
    ip_version: ipv4
    flush: yes
  with_items: ["INPUT", "FORWARD", "OUTPUT"]

- name: ðŸ”¥ Flush filter chains (IPv6)
  ansible.builtin.iptables:
    chain: "{{ item }}"
    ip_version: ipv6
    flush: yes
  with_items: ["INPUT", "FORWARD", "OUTPUT"]

- name: ðŸ”¥ Allow all loopback connectivity
  ansible.builtin.iptables:
    chain: INPUT
    in_interface: lo
    jump: ACCEPT

- name: ðŸ”¥ Allow TCP port 22 / SSH connectivity
  ansible.builtin.iptables:
    chain: INPUT
    destination_port: 22
    jump: ACCEPT
    protocol: tcp

- name: ðŸ”¥ Allow established and related connectivity
  iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT

- name: ðŸ”¥ Allow ingress solana UDP ports
  iptables:
    chain: INPUT
    protocol: udp
    destination_port:
      - "8000:10000"
    jump: ACCEPT
  tags:
    - config.firewall

- name: ðŸ”¥ Allow ingress solana TCP ports
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port:
      - "8000:10000"
    jump: ACCEPT
  tags:
    - config.firewall

- name: ðŸ”¥ Set the policy for the INPUT chain to DROP (IPv4)
  iptables:
    chain: INPUT
    ip_version: ipv4
    policy: DROP

- name: ðŸ”¥ Set the policy for the INPUT chain to DROP (IPv6)
  iptables:
    chain: INPUT
    ip_version: ipv6
    policy: DROP

- name: ðŸ”¥ Save iptables configuration (/etc/iptables/)
  ansible.builtin.command: netfilter-persistent save
  become: yes
user  www-data;

worker_processes  "12";

# Tune timeouts for proxy
proxy_buffering off;
proxy_connect_timeout  360s;
proxy_send_timeout     360s;
proxy_read_timeout     700s;
proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
proxy_next_upstream_timeout 200s;
proxy_next_upstream_tries 5;

map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
}

upstream solana-proxy-ws {
    server 127.0.0.1:28900 weight=3 max_conns=250 max_fails=1000000 fail_timeout=30s;
}

upstream solana-proxy-http {
    server 127.0.0.1:28899 weight=3 max_conns=250 max_fails=1000000 fail_timeout=30s;
}

events {
    worker_connections  1024;
    multi_accept off;
}

http {
    include       /usr/local/openresty/nginx/conf/mime.types;
    default_type  application/octet-stream;

    server_names_hash_bucket_size 64;

    client_max_body_size 64m;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /usr/local/openresty/nginx/access.log main buffer=16k flush=2m;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  75;
    keepalive_requests 600;

    server_tokens on;

    # validator01.ash.local
    server {
        listen       80;
        server_name  rpc.delegate.sh;

        location / {
            # set $jsonrpc_blacklist 'getProgramAccounts';
            # access_by_lua_file 'solana-jsonrpc-access.lua';
            # proxy_pass http://127.0.0.1:28080;
            root /data/www;
        }

        location /.well-known/acme-challenge/ {
            root /data/www;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name rpc.delegate.sh;
        ssl_certificate /etc/letsencrypt/live/rpc.delegate.sh/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/rpc.delegate.sh/privkey.pem;

        location /websocket/ {
                internal;
                proxy_pass http://solana-proxy-ws;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
        }

        location / {
            set $jsonrpc_blacklist 'getProgramAccounts';
            access_by_lua_file 'solana-jsonrpc-access.lua';
            set $websocket 1;
            if ($http_connection !~* "upgrade") {
                set $websocket 0;
            }
            if ($http_upgrade !~* "websocket") {
                set $websocket 0;
            }
            # if $websocket is true then append location
            if ($websocket) {
                rewrite ^ /websocket$uri last;
            }
            proxy_pass http://solana-proxy-http;
        }
     }
}

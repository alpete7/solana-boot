#!/bin/bash

if [[ ! -f /home/solana/.secrets/validator-keypair.json || ! -f /home/solana/.secrets/validator-keypair.json ]]
then
  echo ''
  echo ''
  echo -e "ðŸ‘·  Hello {{ 'Jito' if jito_enable else ''  }} Solana Operator. Your node is almost ready."
  echo ''
{% if jito_enable %}
  echo -e "ðŸš¨ The Jito Solana Software does not come pre-installed, therefore, you will have to compile it from its source code."
  echo -e "ðŸ“— Follow this doc to build Jito software. https://jito-foundation.gitbook.io/mev/jito-solana/building-the-software"
  echo -e "ðŸ“˜ Or use build-jito.sh script in solana home directory."
{% endif %}
  echo -e "ðŸ›    In order to complete the configuration, copy your validator-keypair and your vote-account-keypair in the following location."
  echo ''
  echo -e "ðŸ”‘  validator-keypair => /home/solana/.secrets/funded-validator-keypair.json"
  echo -e "ðŸ”‘  vote-account-keypair => /home/solana/.secrets/vote-account-keypair.json"
  echo ''
  echo -e "ðŸ”‘  If it's your primary node or if you only have one node, create the following symlink"
  echo -e "ðŸ”‘  ln -sf /home/solana/.secrets/funded-validator-keypair.json /home/solana/.secrets/validator-keypair.json"
  echo -e "ðŸ”‘  If it's your secondary node (ðŸ”¥ HOT Spare), create the following symlink"
  echo -e "ðŸ”‘  ln -sf /home/solana/.secrets/unfunded-validator-keypair.json /home/solana/.secrets/validator-keypair.json"
  echo ''
  echo "If you don't have a validator-keypair and vote-account-keypair yet, refer to the official docs to generate one."
  echo -e "ðŸ“—  https://docs.solana.com/running-validator/validator-start#generate-identity"
  echo -e "ðŸ“˜  https://docs.solana.com/running-validator/validator-start#create-authorized-withdrawer-account"
  echo -e "ðŸ“™  https://docs.solana.com/running-validator/validator-start#create-vote-account"
  echo ''
  echo -e "ðŸš¨  It is very important to keep your authorized-withdrawer keypair in a safe location. Do not copy it in this server."
  echo ''
  echo -e "ðŸš€  When you are done, start services:"
  echo -e "sudo systemctl start solana-sys-tuner.service"
  echo -e "sudo systemctl start solana-validator.service"
  echo ''
  echo -e 'ðŸ‘€  Watch logs:'
  echo 'tail -f /mnt/solana/logs/solana-validator.log'
  echo ''
  echo ''
fi

if [[ -f /home/solana/.secrets/validator-keypair.json || -f /home/solana/.secrets/validator-keypair.json ]]
then
  echo -e "ðŸ‘·  Hello {{ 'Jito' if jito_enable else ''  }} Solana Operator."
  echo ''
{% if jito_enable %}
  echo -e "ðŸš¨ The Jito Solana Software does not come pre-installed, therefore, you will have to compile it from its source code."
  echo -e "ðŸ“— Follow this doc to build Jito software. https://jito-foundation.gitbook.io/mev/jito-solana/building-the-software"
  echo -e "ðŸ“˜ Or use build-jito.sh script in solana home directory."
{% endif %}
  echo ''
  echo -e "ðŸ’¡ Command Cheat Sheet:"
  echo ''
  echo -e "Start services"
  echo -e "sudo systemctl start solana-sys-tuner.service"
  echo -e "sudo systemctl start solana-validator.service"
  echo ''
  echo -e "Stop services"
  echo -e "sudo systemctl stop solana-sys-tuner.service"
  echo -e "sudo systemctl stop solana-validator.service"
  echo ''
  echo -e "Restart services"
  echo -e "sudo systemctl restart solana-sys-tuner.service"
  echo -e "sudo systemctl restart solana-validator.service"
  echo ''
  echo -e 'ðŸ‘€  Watch logs'
  echo 'tail -f /mnt/solana/logs/solana-validator.log'
  echo ''
  echo 'Update solana client'
  echo 'sudo -i -u solana solana-install init <version>'
  echo 'sudo systemctl restart solana-sys-tuner'
  echo 'sudo -i -u solana solana-validator --ledger /mnt/solana/ledger wait-for-restart-window && systemctl restart solana-validator'
  echo ''
fi
